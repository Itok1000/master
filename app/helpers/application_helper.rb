# ApplicationHelperモジュール内に
module ApplicationHelper
    # page_titleメソッドを定義
    # ページごとに異なるタイトルを動的に生成するために使用する
    def page_title(title = "") # 引数 title を受け取り、デフォルト値として空の文字列を設定
        base_title = "ガマルジョバ/გამარჯობა" # まず、base_title という変数に基本となるタイトル「ガマルジョバ/გამარჯობა」を代入
        title.present? ? "#{title} | #{base_title}" : base_title
      # その後、titleが存在する場合には、title と base_title を「 | 」で結合した文字列を返し、⇒「title | base_title」
      # title が存在しない場合には、base_title のみを返す⇒「base_title」
    end
end

# module（モジュール）
# クラスやメソッド、定数などをまとめて定義するための仕組み
# モジュールを使うことで、コードの再利用性が高まり、名前空間を分けて整理することができる

# モジュールはクラスとは異なり、インスタンスを作成することはできないが、
# クラスに対して機能を追加したり、複数のクラスで共有するメソッドを定義するために使用される
# モジュールを使うことで、プログラムの構造がより整然とし、メンテナンスが容易になる

# helper
# Ruby on Railsで使用されるヘルパーモジュールのこと
# ビューで使用するメソッドを定義するための場所で、共通の処理をまとめる役割を果たす
# ヘルパーメソッドを使うことで、ビューのコードを簡潔にし、重複するコードを排除することができる

# 例⇒日付のフォーマットやリンクの生成といった処理をヘルパーメソッドとして定義し、ビュー内で簡単に呼び出せるようにする
# これにより、ビューのテンプレートが読みやすくなり、保守性が向上する
